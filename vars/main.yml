---
matrix_synapse_config: 
  server_name: "{{ matrix_server_name }}"
  tls_certificate_path: "{{ matrix_synapse_tls_cert }}"
  tls_private_key_path: "{{ matrix_synapse_tls_key }}"
  acme:
    enabled: false 
    url: https://acme-v01.api.letsencrypt.org/directory
    port: 80
    bind_addresses: ['::', '0.0.0.0']
    reprovision_threshold: 30
  no_tls: "{{ matrix_synapse_skip_ssl }}" 
  tls_fingerprints: []
  pid_file: "{{ matrix_synapse_pid_file }}"
  soft_file_limit: 0
  use_presence: true
  listeners:
    - port: 8448
      bind_addresses:
        - '::'
        - '0.0.0.0'
      type: http
      tls: true 
      x_forwarded: false
      resources:
        - names: [client]
          compress: true
        - names: [federation]
          compress: false
    - port: 8008
      tls: false
      bind_addresses: ['::', '0.0.0.0']
      type: http
      x_forwarded: false
      resources:
        - names: [client]
          compress: true
        - names: [federation]
          compress: false
  database:
    name: "psycopg2"
    args:
      user: "{{ matrix_synapse_pg_user }}"
      password: "{{ matrix_synapse_pg_pass }}"
      database: "{{ matrix_synapse_pg_db }}"
      host: "{{ matrix_synapse_pg_host }}"
      cp_min: 5
      cp_max: 10
  event_cache_size: "10K"
  rc_messages_per_second: 0.2
  rc_message_burst_count: 10.0
  federation_rc_window_size: 1000
  federation_rc_sleep_limit: 10
  federation_rc_sleep_delay: 500
  federation_rc_reject_limit: 50
  federation_rc_concurrent: 3
  media_store_path: /opt/synapse/media_store 
  uploads_path: "/uploads"

  max_upload_size: "{{ matrix_synapse_max_upload_size }}"
  max_image_pixels: "32M"

  dynamic_thumbnails: false

  thumbnail_sizes:
  - width: 32
    height: 32
    method: crop
  - width: 96
    height: 96
    method: crop
  - width: 320
    height: 240
    method: scale
  - width: 640
    height: 480
    method: scale
  - width: 800
    height: 600
    method: scale
  url_preview_enabled: true 
  url_preview_ip_range_blacklist:
  - '127.0.0.0/8'
  - '10.0.0.0/8'
  - '172.16.0.0/12'
  - '192.168.0.0/16'
  - '100.64.0.0/10'
  - '169.254.0.0/16'
  - '::1/128'
  - 'fe80::/64'
  - 'fc00::/7'
  url_preview_url_blacklist:
  - username: '*'
  - netloc: 'google.com'
  - netloc: '*.google.com'
  - netloc: 'twitter.com'
  - netloc: '*.twitter.com'
  - netloc: 't.co'
  - netloc: '*.t.co'
  max_spider_size: "10M"
  enable_registration: False
  registration_shared_secret: "{{ matrix_synapse_registration_secret }}"
  bcrypt_rounds: 12
  allow_guest_access: False
  trusted_third_party_id_servers:
      - matrix.org
      - vector.im
  
  autocreate_auto_join_rooms: true
  enable_metrics: False
  report_stats: "{{ matrix_synapse_report_stats }}" 
  room_invite_state_types:
      - "m.room.join_rules"
      - "m.room.canonical_alias"
      - "m.room.avatar"
      - "m.room.name"
  app_service_config_files: []
  track_appservice_user_ips: False
  macaroon_secret_key: "{{ matrix_synapse_macaroon_secret_key }}"
  expire_access_token: False
  form_secret: "{{ matrix_synapse_form_secret }}"
  signing_key_path: "{{ matrix_synapse_signing_key_path }}"
  old_signing_keys: {}
  key_refresh_interval: "1d" # 1 Day.
  # TODO: More servers should be added
  perspectives:
    servers:
      "matrix.org":
        verify_keys:
          "ed25519:auto":
            key: "Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw"
  password_config:
    enabled: true
  push:
    include_content: false 


  # spam_checker:
  #     module: "my_custom_project.SuperSpamChecker"
  #     config:
  #         example_option: 'things'


  # Whether to allow non server admins to create groups on this server
  enable_group_creation: false

  # If enabled, non server admins can only create groups with local parts
  # starting with this prefix
  # group_creation_prefix: "unofficial/"



  # User Directory configuration
  #
  # 'search_all_users' defines whether to search all users visible to your HS
  # when searching the user directory, rather than limiting to users visible
  # in public rooms.  Defaults to false.  If you set it True, you'll have to run
  # UPDATE user_directory_stream_pos SET stream_id = NULL;
  # on your database to tell it to rebuild the user_directory search indexes.
  #
  #user_directory:
  #   search_all_users: false


  # User Consent configuration
  #
  # for detailed instructions, see
  # https://github.com/matrix-org/synapse/blob/master/docs/consent_tracking.md
  #
  # Parts of this section are required if enabling the 'consent' resource under
  # 'listeners', in particular 'template_dir' and 'version'.
  #
  # 'template_dir' gives the location of the templates for the HTML forms.
  # This directory should contain one subdirectory per language (eg, 'en', 'fr'),
  # and each language directory should contain the policy document (named as
  # '<version>.html') and a success page (success.html).
  #
  # 'version' specifies the 'current' version of the policy document. It defines
  # the version to be served by the consent resource if there is no 'v'
  # parameter.
  #
  # 'server_notice_content', if enabled, will send a user a "Server Notice"
  # asking them to consent to the privacy policy. The 'server_notices' section
  # must also be configured for this to work. Notices will *not* be sent to
  # guest users unless 'send_server_notice_to_guests' is set to true.
  #
  # 'block_events_error', if set, will block any attempts to send events
  # until the user consents to the privacy policy. The value of the setting is
  # used as the text of the error.
  #
  # 'require_at_registration', if enabled, will add a step to the registration
  # process, similar to how captcha works. Users will be required to accept the
  # policy before their account is created.
  #
  # 'policy_name' is the display name of the policy users will see when registering
  # for an account. Has no effect unless `require_at_registration` is enabled.
  # Defaults to "Privacy Policy".
  #
  # user_consent:
  #   template_dir: res/templates/privacy
  #   version: 1.0
  #   server_notice_content:
  #     msgtype: m.text
  #     body: >-
  #       To continue using this homeserver you must review and agree to the
  #       terms and conditions at %(consent_uri)s
  #   send_server_notice_to_guests: True
  #   block_events_error: >-
  #     To continue using this homeserver you must review and agree to the
  #     terms and conditions at %(consent_uri)s
  #   require_at_registration: False
  #   policy_name: Privacy Policy
  #


  # Server Notices room configuration
  #
  # Uncomment this section to enable a room which can be used to send notices
  # from the server to users. It is a special room which cannot be left; notices
  # come from a special "notices" user id.
  #
  # If you uncomment this section, you *must* define the system_mxid_localpart
  # setting, which defines the id of the user which will be used to send the
  # notices.
  #
  # It's also possible to override the room name, the display name of the
  # "notices" user, and the avatar for the user.
  #
  # server_notices:
  #   system_mxid_localpart: notices
  #   system_mxid_display_name: "Server Notices"
  #   system_mxid_avatar_url: "mxc://server.com/oumMVlgDnLYFaPVkExemNVVZ"
  #   room_name: "Server Notices"



  # The `alias_creation` option controls who's allowed to create aliases
  # on this server.
  #
  # The format of this option is a list of rules that contain globs that
  # match against user_id and the new alias (fully qualified with server
  # name). The action in the first rule that matches is taken, which can
  # currently either be "allow" or "deny".
  #
  # If no rules match the request is denied.
  alias_creation_rules:
      - user_id: "*"
        alias: "*"
        action: allow
